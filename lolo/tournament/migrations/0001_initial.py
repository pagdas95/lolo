# Generated by Django 5.0.9 on 2024-10-27 15:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the category', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Tournament title', max_length=200)),
                ('description', models.TextField(help_text='Tournament description and rules')),
                ('image', models.ImageField(help_text='Tournament cover image', upload_to='tournament_images/')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('participant_limit', models.PositiveIntegerField(blank=True, help_text='Maximum number of participants (null for unlimited)', null=True)),
                ('finalists_count', models.PositiveIntegerField(default=3, help_text='Number of finalists to be selected')),
                ('is_final_tournament', models.BooleanField(default=False, help_text='Indicates if this is a final tournament')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournaments', to='tournament.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tournaments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VideoSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('video_file', models.FileField(upload_to='tournament_videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'avi'])])),
                ('cover_image', models.ImageField(help_text='Thumbnail for the video', upload_to='video_covers/')),
                ('duration', models.DurationField(blank=True, help_text='Video duration (automatically calculated)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False, help_text='Indicates if the video has been processed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votes_received', models.PositiveIntegerField(default=0)),
                ('is_finalist', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='tournament.tournament')),
                ('video_submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_participation', to='tournament.videosubmission')),
            ],
            options={
                'verbose_name_plural': 'Participations',
                'unique_together': {('user', 'tournament')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('participation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='tournament.participation')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='tournament.tournament')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes_cast', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Votes',
                'unique_together': {('voter', 'tournament')},
            },
        ),
    ]
